# "desktop/prebuilt/cartoon/graphs/cartoon_gan_desktop_live.pbtext"
# https://github.com/61315/mediapipe-prebuilt/tree/master/src/desktop/cartoon

# MediaPipe graph that performs style transfer operation with
# TensorFlow Lite on CPU.

# Input image. (ImageFrame)
input_stream: "input_video"

# Output image with rendered results. (ImageFrame)
output_stream: "output_video"

node {
  calculator: "FlowLimiterCalculator"
  input_stream: "input_video"
  input_stream: "FINISHED:output_video"
  input_stream_info: {
    tag_index: "FINISHED"
    back_edge: true
  }
  output_stream: "throttled_input_video"
}

# Defines side packets for further use in the graph.
node {
  calculator: "ConstantSidePacketCalculator"
  output_side_packet: "PACKET:0:tensor_width"
  output_side_packet: "PACKET:1:tensor_height"
  node_options: {
    [type.googleapis.com/mediapipe.ConstantSidePacketCalculatorOptions]: {
      packet { int_value: 224 }
      packet { int_value: 224 }
    }
  }
}

node: {
  calculator: "ImageTransformationCalculator"
  input_stream: "IMAGE:throttled_input_video"
  output_stream: "IMAGE:transformed_input_video"
  node_options: {
    [type.googleapis.com/mediapipe.ImageTransformationCalculatorOptions] {
      output_width: 224
      output_height: 224
      scale_mode: 2 # Aspect fit
    }
  }
}

# Converts the transformed input image on CPU into an image tensor stored in
# TfLiteTensor. The zero_center option is set to true to normalize the
# pixel values to [-1.f, 1.f] as opposed to [0.f, 1.f]. With the
# max_num_channels option set to 4, all 4 RGBA channels are contained in the
# image tensor.
node {
  calculator: "TfLiteConverterCalculator"
  input_stream: "IMAGE:transformed_input_video"
  output_stream: "TENSORS:image_tensor"
  node_options: {
    [type.googleapis.com/mediapipe.TfLiteConverterCalculatorOptions] {
      zero_center: true
      max_num_channels: 3
    }
  }
}

# Generates a single side packet containing a TensorFlow Lite op resolver that
# supports custom ops needed by the model used in this graph.
node {
  calculator: "TfLiteCustomOpResolverCalculator"
  output_side_packet: "op_resolver"
  node_options: {
    [type.googleapis.com/mediapipe.TfLiteCustomOpResolverCalculatorOptions] {
      use_gpu: false
    }
  }
}

# Runs a TensorFlow Lite model on CPU that takes an image tensor and outputs a
# tensor representing the bitmap, which has the same width and height
# as the input image tensor.
node {
  calculator: "TfLiteInferenceCalculator"
  input_stream: "TENSORS:image_tensor"
  output_stream: "TENSORS:bitmap_tensor"
  input_side_packet: "CUSTOM_OP_RESOLVER:op_resolver"
  node_options: {
    [type.googleapis.com/mediapipe.TfLiteInferenceCalculatorOptions] {
      model_path: "mediapipe/examples/desktop/prebuilt/cartoon/models/cartoon_gan_fp16.tflite"
      use_gpu: false
    }
  }
}

# Decodes the bitmap tensor generated by the TensorFlow Lite model into a
# image of values in [0, 255], stored in a CPU buffer.
node {
  calculator: "TfLiteTensorsToImageFrameCalculator"
  input_stream: "TENSORS:bitmap_tensor"
  output_stream: "IMAGE:output_video"
  node_options: {
    [type.googleapis.com/mediapipe.TfLiteTensorsToImageFrameCalculatorOptions] {
      tensor_width: 224
      tensor_height: 224
      tensor_channels: 3
      scale_factor: 255.0
    }
  }
}
